version: '3.8'

services:
  # MongoDB Database
  mongodb:
    image: mongo:7
    container_name: tempotype-mongodb
    restart: unless-stopped
    environment:
      MONGO_INITDB_ROOT_USERNAME: admin
      MONGO_INITDB_ROOT_PASSWORD: password123
      MONGO_INITDB_DATABASE: tempotype
    ports:
      - "27017:27017"
    volumes:
      - mongodb_data:/data/db
    networks:
      - tempotype-network
    healthcheck:
      test: echo 'db.runCommand("ping").ok' | mongosh localhost:27017/test --quiet
      interval: 10s
      timeout: 5s
      retries: 5

  # Backend API
  backend:
    build:
      context: .
      dockerfile: Dockerfile.backend
    container_name: tempotype-backend
    restart: unless-stopped
    ports:
      - "3001:3001"
    environment:
      NODE_ENV: production
      PORT: 3001
      MONGODB_URI: mongodb+srv://ttmcivor:REDACTED_PASSWORD@cluster0.kjwztxa.mongodb.net/tempotype?retryWrites=true&w=majority&appName=Cluster0
      JWT_SECRET: ${JWT_SECRET:-your-super-secret-jwt-key-change-this-in-production}
      FRONTEND_URL: http://localhost:80
    volumes:
      - ./uploads:/app/uploads
    networks:
      - tempotype-network
    healthcheck:
      test: ["CMD", "node", "-e", "require('http').get('http://localhost:3001/api/health', (r) => {process.exit(r.statusCode === 200 ? 0 : 1)})"]
      interval: 30s
      timeout: 3s
      retries: 3

  # Frontend
  frontend:
    build:
      context: .
      dockerfile: Dockerfile.frontend
    container_name: tempotype-frontend
    restart: unless-stopped
    ports:
      - "80:80"
    environment:
      VITE_API_URL: http://localhost:3001
    depends_on:
      - backend
    networks:
      - tempotype-network

networks:
  tempotype-network:
    driver: bridge

volumes:
  mongodb_data:
    driver: local
