@import 'tailwindcss';

:root {
  font-family: system-ui, Avenir, Helvetica, Arial, sans-serif;
  line-height: 1.5;
  font-weight: 400;

  color-scheme: light dark;
  color: rgba(255, 255, 255, 0.87);
  background-color: #242424;

  font-synthesis: none;
  text-rendering: optimizeLegibility;
  -webkit-font-smoothing: antialiased;
  -moz-osx-font-smoothing: grayscale;
}

a {
  font-weight: 500;
  color: #646cff;
  text-decoration: inherit;
}
a:hover {
  color: #535bf2;
}

body {
  margin: 0;
  min-width: 320px;
  min-height: 100vh;
}

h1 {
  font-size: 3.2em;
  line-height: 1.1;
}

button {
  border-radius: 8px;
  border: 1px solid transparent;
  padding: 0.6em 1.2em;
  font-size: 1em;
  font-weight: 500;
  font-family: inherit;
  background-color: #1a1a1a;
  cursor: pointer;
  transition: border-color 0.25s;
}
button:hover {
  border-color: #646cff;
}
button:focus,
button:focus-visible {
  outline: 4px auto -webkit-focus-ring-color;
}

@media (prefers-color-scheme: light) {
  :root {
    color: #213547;
    background-color: #ffffff;
  }
  a:hover {
    color: #747bff;
  }
  button {
    background-color: #f9f9f9;
  }
}

/* Custom centering utilities for SideBarTab components */
.sidebar-tab-container {
  display: flex;
  align-items: flex-start;
  justify-content: center;
  min-height: 100vh;
  width: 100%;
  transition: background-color 0.3s ease;
}

.sidebar-tab-content {
  display: flex;
  flex-direction: column;
  align-items: center;
  justify-content: flex-start;
  width: 100%;
  max-width: 1200px;
  margin: 0 auto;
  padding: 2rem;
  background: transparent;
}

.homepage-content {
  max-width: 80rem; /* 1280px */
}

.adaptive-typing-content {
  max-width: 64rem; /* 1024px */
}

.stats-content {
  max-width: 96rem; /* 1536px */
}

/* Ensure proper centering for all content */
.center-content {
  display: flex;
  flex-direction: column;
  align-items: center;
  justify-content: flex-start;
  text-align: center;
  width: 100%;
  padding-top: 0;
}

/* Card content helper:
   Ensures title + description are centered within their column even if
   surrounding layout uses flex/space-between. Apply the class
   `card-content` to the content wrapper (left column). */
.card-content {
  display: flex;
  flex-direction: column;
  align-items: center;
  text-align: center;
}

/* Ensure truncated description centers within its max-width */
.card-content .truncate {
  margin-left: auto;
  margin-right: auto;
}

/* Optional helper to move duration beneath content on very small screens */
@media (max-width: 640px) {
  .card-duration-stack {
    display: block !important;
    margin-top: 0.5rem;
  }
}

/* Card hover helper for stronger, consistent hover effect */
.card-hover {
  transition: transform 200ms ease-out, box-shadow 200ms ease-out;
  will-change: transform;
}
.card-hover:hover {
  transform: translateY(-6px) scale(1.03);
  box-shadow: 0 20px 40px rgba(2, 6, 23, 0.12), 0 6px 12px rgba(2, 6, 23, 0.06);
}

/* Keep selector simple and target the TextBox component's typing area.
   Using .typing-area ensures the rule is robust and easy to read. */
.typing-area > textarea {
  display: block;
  width: 60vw;
  max-width: calc(100vw - 40vw);
  margin: 0 auto;
  box-sizing: border-box;
}

/* Simplified selector: target the common card wrapper when it needs centered content */
.backdrop-blur-sm.text-center {
  display: flex;
  flex-direction: column;
  align-items: center;
  justify-content: center;
  text-align: center;
}
/* TempoType: compact carousel override — force carousel wrapper to compact width (max-w-md ~ 28rem) */
.w-full.flex.justify-center > .w-full.max-w-md.mx-auto {
  max-width: 28rem !important;
  padding: 0.5rem !important; /* slightly reduce wrapper padding */
  box-sizing: border-box;
}

/* Slightly reduce slide inner padding so multiple carousels fit better */
.w-full.flex.justify-center > .w-full.max-w-md.mx-auto .mx-2 {
  margin-left: 0.25rem !important;
  margin-right: 0.25rem !important;
}

/* Ensure CardCarousel content uses the available width */
.w-full.flex.justify-center > .w-full.max-w-md.mx-auto .w-full {
  width: 100% !important;
  max-width: 100% !important;
}
/* TempoType: ensure carousel has a minimum width so it doesn't collapse */
.w-full.flex.justify-center > .w-full.max-w-md.mx-auto {
  min-width: 20rem !important; /* ~320px */
  /* keep the existing max-width so carousels stay compact */
  max-width: 28rem !important;
}

/* If you want a smaller or larger min-width, change 20rem above to the desired value */
/* HomePage 2x2 grid helper: ensure two columns on larger screens, single column on smaller screens.
   Prevent collapsing by enforcing a minimum row height while allowing rows to grow. */
.four-grid {
  display: grid;
  grid-template-columns: repeat(2, minmax(0, 1fr));
  grid-auto-rows: minmax(
    280px,
    auto
  ); /* increased from 220px to give more space */
  gap: 3rem 3rem; /* horizontal and vertical gap */
  row-gap: 5rem; /* extra vertical spacing between rows */
  width: 100%;
  max-width: 1200px;
  margin: 0 auto 4rem; /* added bottom margin to separate from content below */
  box-sizing: border-box;
  align-items: stretch;
}

/* Responsive: single column layout on smaller screens */
@media (max-width: 768px) {
  .four-grid {
    grid-template-columns: 1fr; /* Single column */
    gap: 2rem; /* Reduce gap for mobile */
    row-gap: 3rem; /* Reduce vertical spacing */
    padding: 0 1rem; /* Add some padding on sides */
  }
}

/* For very small screens */
@media (max-width: 480px) {
  .four-grid {
    gap: 1.5rem;
    row-gap: 2rem;
    grid-auto-rows: minmax(240px, auto); /* Slightly smaller minimum height */
  }
}

/* Results Popup Positioning - Position over text box */
.results-popup-overlay {
  position: fixed;
  top: 60vh; /* Position lower to match text box location */
  left: 65%; /* Move to the left from 80% to 65% */
  transform: translateX(-50%);
  width: 40vw; /* Reduced from 60vw to 40vw */
  max-width: 800px; /* Reduced from 1200px to 800px */
  max-height: 80vh; /* Limit height to 80% of viewport */
  overflow-y: auto; /* Add vertical scroll */
  z-index: 9999;
  transition: all 0.3s ease;
  background: rgba(255, 255, 255, 0.95);
  backdrop-filter: blur(10px);
  border-radius: 1.5rem;
  box-shadow: 0 25px 50px -12px rgba(0, 0, 0, 0.25);
  border: 1px solid rgba(255, 255, 255, 0.2);
  padding: 1.5rem;
}

/* Dark mode background for results popup */
.results-popup-overlay.text-gray-100 {
  background: rgba(31, 41, 55, 0.95);
  border: 1px solid rgba(75, 85, 99, 0.5);
}

/* Ensure close button is visible and properly positioned */
.results-popup-overlay .close-button {
  position: absolute !important;
  top: 1rem !important;
  right: 1rem !important;
  z-index: 10000 !important;
  width: 2rem;
  height: 2rem;
  border-radius: 0.375rem;
  display: flex;
  align-items: center;
  justify-content: center;
  background: rgba(239, 68, 68, 0.9) !important;
  color: white !important;
  border: 1px solid rgba(239, 68, 68, 1);
  cursor: pointer;
  transition: all 0.2s ease;
  box-shadow: 0 2px 4px rgba(0, 0, 0, 0.1);
  font-size: 1rem;
  font-weight: bold;
}

.results-popup-overlay .close-button::before {
  content: "×";
  font-size: 1.5rem;
  line-height: 1;
  color: white;
}

.results-popup-overlay .close-button svg {
  display: none !important;
}

.results-popup-overlay .close-button:hover {
  background: rgba(220, 38, 38, 1) !important;
  transform: scale(1.05);
  box-shadow: 0 4px 8px rgba(0, 0, 0, 0.2);
}

.results-popup-overlay.text-gray-100 .close-button {
  background: rgba(239, 68, 68, 0.9) !important;
  border: 1px solid rgba(239, 68, 68, 1);
}

.results-popup-overlay.text-gray-100 .close-button::before {
  color: white;
}

.results-popup-overlay.text-gray-100 .close-button:hover {
  background: rgba(220, 38, 38, 1) !important;
}
